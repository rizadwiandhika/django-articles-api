name: Push docker hub & deploy AWS

on:
  push:
    branches: [main]

concurrency:
  group: 'aws-deploy'

jobs:
  push-to-docker-hub:
    runs-on: ubuntu-latest
    steps:
      # Cache
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build & push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  aws-deploy:
    runs-on: ubuntu-latest
    needs:
      - push-to-docker-hub
    steps:
      - name: Executing AWS SSH scripts
        uses: appleboy/ssh-action@master
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
          DOCKER_COMPOSE_ENDPOINT: 'https://raw.githubusercontent.com/rizadwiandhika/django-articles-api/main/docker-compose.prod.yml'
          AWS_ENV_FILE: ${{ secrets.AWS_ENV_FILE }}
          AWS_EC2_DOCKER_PULL_WAIT_SECONDS: ${{ secrets.AWS_EC2_DOCKER_PULL_WAIT_SECONDS }}
        with:
          host: ${{ secrets.AWS_EC2_SSH_HOST }}
          port: 22
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}

          timeout: '5m'
          envs: DOCKER_IMAGE, DOCKER_COMPOSE_ENDPOINT, AWS_ENV_FILE, AWS_EC2_DOCKER_PULL_WAIT_SECONDS
          script: |
            mkdir -p ~/app/articles && cd ~/app/articles

            docker compose stop
            docker compose down

            docker pull $DOCKER_IMAGE
            curl $DOCKER_COMPOSE_ENDPOINT > docker-compose.yml
            echo $AWS_ENV_FILE | base64 --decode > .env.prod
            ls -al

            docker compose up -d
